Option Explicit

Sub SearchTest()
    Dim tbl As ListObject
    Set tbl = ThisWorkbook.Sheets("TEST").ListObjects(1)

    Dim driver As New WebDriver
    SafeOpen driver, Edge

    driver.Navigate "https://trackings.post.japanpost.jp/services/srv/sequenceNoSearch/input"

    driver.FindElement(by.Name, "requestNo").SetValue "50887923004"
    driver.FindElement(by.Name, "count").SetValue "10"
    driver.FindElement(by.Name, "sequenceNoSearch").Click

    Dim r As Collection
    Set r = GetTrackingResultsFromTable(driver, "//*[@id=""content""]/form/div/table/tbody")

    Dim item As Dictionary
    Dim newRow As ListRow

    For Each item In r
        Set newRow = tbl.ListRows.Add  ' この方法より、idxを取ってListColumns(見出し名).DBR(idx)をするほうが好みです

        With newRow
            If item("type") = "normal" Then
                .Range(1) = item("inquiryNumber")
                .Range(2) = item("itemType")
                .Range(3) = item("latestDate")
                .Range(4) = item("latestStatus")
                .Range(5) = item("latestOffice")
                .Range(6) = item("postalCode")
                .Range(7) = item("prefecture")
            Else
                .Range(1) = item("inquiryNumber")
                .Range(2) = "エラー"
                .Range(3) = item("errorType")
                .Range(4) = item("errorMessage")
                .Range(5) = "N/A"
                .Range(6) = "N/A"
                .Range(7) = "N/A"
            End If
        End With
    Next item

    driver.Shutdown

    MsgBox "検索が完了しました。", vbInformation
End Sub


Sub searchMain()
    Const BATCH_SIZE As Long = 1000 ' 一度に処理する件数
    Const SEQUENCE_SEARCH_SIZE As Long = 100  ' 連番検索で取得する件数
    Const INDIVIDUAL_SEARCH_SIZE As Long = 10 ' 個別検索で取得する件数

    Dim tbl As ListObject
    Set tbl = ThisWorkbook.Worksheets("Sheet4").ListObjects(1)

    Dim totalRows As Long
    totalRows = tbl.ListColumns("問い合わせ番号").DataBodyRange.Count

    ' 問い合わせ番号と行番号の辞書を作成
    Dim inquiryDict As Object
    Set inquiryDict = CreateObject("Scripting.Dictionary")
    Dim i As Long
    For i = 1 To totalRows
        inquiryDict.Add CStr(tbl.ListColumns("問い合わせ番号").DataBodyRange(i).value), i
'        Log.Info "Added to dict: " & tbl.ListColumns("問い合わせ番号").DataBodyRange(i).value & " -> " & i
    Next i

'    Dim key As Variant
'    For Each key In inquiryDict.Keys
'        Log.Info "Dict content: " & key & " -> " & inquiryDict(key)
'    Next key

    Dim driver As WebDriver
    Set driver = New WebDriver
    SafeOpen driver, Edge

    Dim startRow As Long
    startRow = 1

    Do While startRow <= totalRows
        Dim endRow As Long
        endRow = Application.Min(startRow + BATCH_SIZE - 1, totalRows)

        ProcessBatch tbl, inquiryDict, driver, startRow, endRow, SEQUENCE_SEARCH_SIZE, INDIVIDUAL_SEARCH_SIZE

        startRow = endRow + 1

    Loop

    driver.Shutdown
End Sub

Sub ProcessBatch(tbl As ListObject, inquiryDict As Dictionary, driver As WebDriver, startRow As Long, endRow As Long, SEQUENCE_SEARCH_SIZE As Long, INDIVIDUAL_SEARCH_SIZE As Long)
    Dim inquiryNumbers() As Variant
    ReDim inquiryNumbers(endRow - startRow)

    Dim i As Long
    For i = startRow To endRow
        inquiryNumbers(i - startRow) = tbl.ListColumns("問い合わせ番号").DataBodyRange(i).value
    Next i

    Dim currentIndex As Long
    currentIndex = 0

    Do While currentIndex < UBound(inquiryNumbers)
        Dim results As Collection

        If currentIndex + SEQUENCE_SEARCH_SIZE <= UBound(inquiryNumbers) Then
            ' 連番検索を試みる
            Set results = sequenceNoSearch(driver, inquiryNumbers(currentIndex), SEQUENCE_SEARCH_SIZE)

            If results.Count = SEQUENCE_SEARCH_SIZE Then
                ' 連番検索が成功した場合
                UpdateResults tbl, inquiryDict, results

                currentIndex = currentIndex + SEQUENCE_SEARCH_SIZE
            Else
                ' 連番検索が失敗した場合、個別検索に切り替え
                Dim individualNumbers() As Variant
                ReDim individualNumbers(0 To INDIVIDUAL_SEARCH_SIZE - 1)

                For i = 0 To INDIVIDUAL_SEARCH_SIZE - 1
                    If currentIndex + i <= UBound(inquiryNumbers) Then
                        individualNumbers(i) = inquiryNumbers(currentIndex + i)
                    Else
                        ReDim Preserve individualNumbers(0 To i - 1)
                        Exit For
                    End If
                Next i

                Set results = individualSearch(driver, individualNumbers)
                UpdateResults tbl, inquiryDict, results

                currentIndex = currentIndex + i
            End If
        Else
            ' 残りの番号を個別検索
            Dim remainingCount As Long
            remainingCount = UBound(inquiryNumbers) - currentIndex + 1

            ReDim individualNumbers(0 To remainingCount - 1)
            For i = 0 To remainingCount - 1
                individualNumbers(i) = inquiryNumbers(currentIndex + i)
            Next i

            Set results = individualSearch(driver, individualNumbers)
            UpdateResults tbl, inquiryDict, results

            Exit Do
        End If
    Loop
End Sub

Sub UpdateResults(tbl As ListObject, inquiryDict As Dictionary, results As Collection)
    Application.ScreenUpdating = False
    Dim item As Dictionary
    On Error Resume Next
    For Each item In results
        Log.Info "Processing item: " & item("inquiryNumber")
        If item("type") = "normal" Then
            Dim rowIndex As Long
'            If inquiryDict.Exists(item("inquiryNumber")) Then
            rowIndex = inquiryDict(item("inquiryNumber"))
            If rowIndex < 1 Then Stop
            Log.Info item("inquiryNumber") & ": row " & rowIndex
            tbl.ListColumns("チェック").DataBodyRange(rowIndex).value = item("inquiryNumber")
            tbl.ListColumns("商品種別").DataBodyRange(rowIndex).value = item("itemType")
            tbl.ListColumns("最新年月日").DataBodyRange(rowIndex).value = item("latestDate")
            tbl.ListColumns("最新状態").DataBodyRange(rowIndex).value = item("latestStatus")
            tbl.ListColumns("最新取扱局").DataBodyRange(rowIndex).value = item("latestOffice")
            tbl.ListColumns("最新取扱局_郵便番号").DataBodyRange(rowIndex).value = item("postalCode")
            tbl.ListColumns("県名等").DataBodyRange(rowIndex).value = item("prefecture")
'            Else
'                Log.Warn "No row index found for inquiry number: " & item("inquiryNumber")
'            End If
        ElseIf item("type") = "error" Then
            If rowIndex > 0 Then
                tbl.ListColumns("最新状態").DataBodyRange(rowIndex).value = item("errorMessage")
            Else
                Log.Warn "No valid row index for error message: " & item("errorMessage")
            End If
        End If
        If Err.Number <> 0 Then
            Log.Error "Error processing item " & item("inquiryNumber") & ": " & Err.Description
            Err.Clear
        End If
    Next item
    Application.ScreenUpdating = True
    On Error GoTo 0
End Sub



Private Function GetTrackingResultsFromTable(driver As WebDriver, XP_tbody As String) As Collection
    Const DBG As Boolean = False
'    On Error GoTo Catch

    Dim resultTable As WebElement
    Set resultTable = driver.FindElement(by.XPath, XP_tbody)

    Dim rows() As WebElement
    rows = resultTable.FindElements(by.TagName, "tr")

    Dim data As New Collection
    Dim i As Long
    Dim skipNextRow As Boolean

    If DBG Then Log.Info "Total rows found: " & UBound(rows)

    For i = 2 To UBound(rows)
        If skipNextRow Then
            skipNextRow = False
            If DBG Then Log.Info "Skipping row " & i
            GoTo ContinueLoop
        End If

        If DBG Then Log.Info "Processing row " & i

        Dim cells() As WebElement
        cells = rows(i).FindElements(by.TagName, "td")

        If DBG Then Log.Info "Cells in row " & i & ": " & UBound(cells) + 1

        Dim item As Object
        Set item = CreateObject("Scripting.Dictionary")

        If UBound(cells) + 1 = 6 Then ' 通常のデータ行は6つのtdを持つ
            item.Add "type", "normal"  ' 457: このキーは既にこのコレクションの要素に割り当てられています。
            item.Add "inquiryNumber", Replace(cells(0).GetText, "-", "")
            item.Add "itemType", cells(1).GetText
            item.Add "latestDate", cells(2).GetText
            item.Add "latestStatus", cells(3).GetText
            item.Add "latestOffice", cells(4).GetText
            item.Add "prefecture", cells(5).GetText

            ' 郵便番号だけ次のtrにある
            If i + 1 <= UBound(rows) Then
                Dim nextRowCells() As WebElement
                nextRowCells = rows(i + 1).FindElements(by.TagName, "td")
                item("postalCode") = nextRowCells(0).GetText
                skipNextRow = True
            Else
                Log.Warn "No next row for postal code at row " & i
                item.Add "postalCode", "N/A"
            End If

            If DBG Then Log.Info "Added normal item: " & item("inquiryNumber")
        Else ' 問い合わせ番号が不正である場合
            item.Add "type", "error"
            item.Add "inquiryNumber", cells(0).GetText

            Dim errorCell As WebElement
            Set errorCell = cells(1)
            Dim errorMessage As String
            errorMessage = errorCell.GetText

            If InStr(1, errorMessage, "見つかりません") > 0 Then
                item.Add "errorType", "NotFound"
            ElseIf InStr(1, errorMessage, "同じお問い合わせ番号が入力されています") > 0 Then
                item.Add "errorType", "Duplicate"
            Else
                item.Add "errorType", "Unknown"
            End If

            item.Add "errorMessage", errorMessage
            item.Add "itemType", "N/A"
            item.Add "latestDate", "N/A"
            item.Add "latestStatus", "N/A"
            item.Add "latestOffice", "N/A"
            item.Add "prefecture", "N/A"
            item.Add "postalCode", "N/A"

            Log.Info "Added error item: " & item("inquiryNumber")
        End If

        data.Add item

ContinueLoop:
    Next i

    Set GetTrackingResultsFromTable = data

    If DBG Then
        Dim inquiryNumbers As String
        inquiryNumbers = GetInquiryNumbersFromCollection(data)
        Log.Info "Collected Inquiry Numbers: " & inquiryNumbers
        Log.Info "Total items collected: " & data.Count
    End If

    Exit Function

'Catch:
'    Log.Error "Error in GetTrackingResultsFromTable: " & Err.Number & ": " & Err.Description
'    Stop
'    Set GetTrackingResultsFromTable = New Collection
End Function


Private Function sequenceNoSearch(driver As WebDriver, StartNumber As Variant, Claims As Long) As Collection
    ' 日本郵政追跡サービスの連番検索を実施します。StartNumberから100件のデータを取得します
    If Claims < 1 Or Claims > 100 Then
        Err.Raise 5, "sequenceNoSearch", "Claims must be between 1 and 100."
    End If

    driver.Navigate "https://trackings.post.japanpost.jp/services/srv/sequenceNoSearch/input"
    driver.FindElement(by.Name, "requestNo").SetValue CStr(StartNumber)
    driver.FindElement(by.Name, "count").SetValue CStr(Claims)
    driver.FindElement(by.Name, "sequenceNoSearch").Click
    Set sequenceNoSearch = GetTrackingResultsFromTable(driver, "//*[@id=""content""]/form/div/table/tbody")
End Function

Private Function individualSearch(driver As WebDriver, trackingNumbers() As Variant) As Collection
    ' 日本郵政追跡サービスの個別番号検索を実施します。最大99件までの問い合わせ番号を配列で受け取ります
    If Not IsArray(trackingNumbers) Then
        Err.Raise 5, "individualSearch", "trackingNumbers must be an array."
    End If

    Dim numTrackingNumbers As Long
    numTrackingNumbers = UBound(trackingNumbers) - LBound(trackingNumbers) + 1

    If numTrackingNumbers > 99 Then
        Err.Raise 5, "individualSearch", "Maximum 99 tracking numbers allowed."
    End If

    Dim results As New Collection
    Dim i As Long, j As Long

    For i = LBound(trackingNumbers) To UBound(trackingNumbers) Step 10
        driver.Navigate "https://trackings.post.japanpost.jp/services/srv/search/input"

        For j = 0 To 9
            If i + j > UBound(trackingNumbers) Then Exit For
            driver.FindElement(by.Name, "requestNo" & (j + 1)).SetValue CStr(trackingNumbers(i + j))
        Next j

        driver.FindElement(by.Name, "search").Click

        Dim batchResults As Collection
        Set batchResults = GetTrackingResultsFromTable(driver, "//*[@id=""content""]/form/div/table/tbody")

        Dim result As Variant
        For Each result In batchResults
            results.Add result
        Next result
    Next i

    Set individualSearch = results
End Function


Private Sub LogItemInfo(item As Dictionary)
    Dim logMessage As String
    logMessage = "Item Info:" & vbNewLine & _
                 "  Type: " & item("type") & vbNewLine & _
                 "  Inquiry Number: " & item("inquiryNumber") & vbNewLine

    If item("type") = "normal" Then
        logMessage = logMessage & _
                     "  Item Type: " & item("itemType") & vbNewLine & _
                     "  Latest Date: " & item("latestDate") & vbNewLine & _
                     "  Latest Status: " & item("latestStatus") & vbNewLine & _
                     "  Latest Office: " & item("latestOffice") & vbNewLine & _
                     "  Prefecture: " & item("prefecture") & vbNewLine & _
                     "  Postal Code: " & item("postalCode")
    Else
        logMessage = logMessage & _
                     "  Error Type: " & item("errorType") & vbNewLine & _
                     "  Error Message: " & item("errorMessage")
    End If

    Log.Info logMessage
End Sub

Private Function GetInquiryNumbersFromCollection(results As Collection) As String
    Dim item As Dictionary
    Dim inquiryNumbers As String

    For Each item In results
        If TypeName(item) = "Dictionary" Then
            inquiryNumbers = inquiryNumbers & item("inquiryNumber") & ", "
        End If
    Next item

    ' 最後のカンマとスペースを削除
    If Len(inquiryNumbers) > 0 Then
        inquiryNumbers = Left(inquiryNumbers, Len(inquiryNumbers) - 2)
    End If

    GetInquiryNumbersFromCollection = inquiryNumbers
End Function




